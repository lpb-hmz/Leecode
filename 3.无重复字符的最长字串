class Solution {
public:
    int lengthOfLongestSubstring(string s) {

        unordered_map<char,int> hash;
        int curLength = 0;
        int maxLength = 0;
        int startIndex = 0;

        for(int i= 0;i<s.length();i++)
        {
            if(hash.find(s[i]) == hash.end())
            {
               curLength ++;
               hash[s[i]] = i;
            }
            else
            {
                if(curLength>maxLength)
                {
                    maxLength = curLength;
                }
                startIndex = max(startIndex,hash[s[i]]);
                curLength = i-startIndex;
                hash[s[i]] =i;
            }
             
        }

    return max(curLength,maxLength);

    }
};
